---
- name: Download mysql community repo
  ansible.builtin.get_url:
    url: https://dev.mysql.com/get/mysql80-community-release-el9-4.noarch.rpm
    dest: /tmp/mysql80-community-release-el9-4.noarch.rpm
    http_agent: curl/7.76.1

- name: Download GPG key
  ansible.builtin.get_url:
    url: https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
    dest: /tmp/RPM-GPG-KEY-mysql-2022

- name: Install GPG key
  ansible.builtin.rpm_key:
    key: /tmp/RPM-GPG-KEY-mysql-2022
    state: present

- name: Install mysql community repo
  ansible.builtin.dnf:
    name: /tmp/mysql80-community-release-el9-4.noarch.rpm
    state: present

- name: Install packages
  ansible.builtin.dnf:
    name: mysql-community-server
    state: present

- name: Install PyMySQL
  ansible.builtin.pip:
    name: PyMySQL
    state: present

- name: Enable and start mysqld
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: true

- name: Copy my.cnf
  ansible.builtin.copy:
    src: files/my.cnf
    dest: /etc/my.cnf
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: restart mysqld
  ansible.builtin.service:
    name: mysqld
    state: restarted

## MySQLの初期化処理
- name: Check Initialize
  command: mysql --user root --password={{ mysql_root_password }} --execute="SELECT 1;"
  register: mysql_login_result
  ignore_errors: true
  changed_when: false

- name: Execute mysql initialize
  block:
    - name: get root password
      shell: "grep 'A temporary password is generated for root@localhost' /var/log/mysqld.log | awk -F ' ' '{print $(NF)}'"
      register: root_password
    - name: update expired root user password
      command: mysql --user root --password={{ root_password.stdout }} --connect-expired-password --execute="ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}';"
    - name: Deletes anonymous MySQL server user
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: ""
        host_all: yes
        state: absent
    - name: Get hostname
      command: hostname
      register: hostname
      changed_when: false
      failed_when: false
    - name: Disallow root login remotely
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: root
        host: "{{ hostname.stdout }}"
        state: absent
    - name: Removes the MySQL test database
      community.mysql.mysql_db: 
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: test
        state: absent
  when: mysql_login_result.rc != 0
      
- name: Restart mysqld
  ansible.builtin.service:
    name: mysqld
    state: restarted
